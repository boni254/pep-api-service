[tool.poetry]
name = "pep-api-service"
version = "0.1.0"
description = "Microserviço para receber informações clínicas de pacientes."
authors = ["Aldemon Bonifácio"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0.7"
prettyconf = "^2.2.1"
gunicorn = { version = "^22.0.0", extras = ["gevent"] }
djangorestframework = "^3.15.2"
drf-spectacular = "^0.27.2"
whitenoise = "^6.7.0"
pydantic = "^2.9.1"
pika = "^1.3.2"
dj-database-url = "^2.2.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "8.2.2"
ruff = "0.5.1"
pre-commit = "3.7.1"
ipython = "8.26.0"
pytest-cov = "5.0.0"
pytest-django = "4.8.0"
pytest-mock = "3.14.0"
responses = "^0.25.3"
pytest-env = "^1.1.3"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "project.settings"
addopts = "-x -v --failed-first --cov=app/ --cov-report=term-missing:skip-covered --cov-report=xml --cov-config=.coveragerc --reuse-db"

[tool.pytest_env]
DJANGO_ENVIRONMENT = "test"

[tool.ruff]
line-length = 110

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
